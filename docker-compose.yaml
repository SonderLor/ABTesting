version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./test-frontend/build:/usr/share/nginx/html
      - static_volume:/usr/share/nginx/html/django-static
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web
      - grafana

  web:
    build: ./app
    command: >
      sh -c "python manage.py collectstatic --no-input &&
             gunicorn app.wsgi:application --bind 0.0.0.0:8000"
    env_file:
      - ./app/.env
    volumes:
    - static_volume:/static
    depends_on:
      - postgres
      - mongo
      - redis

  postgres:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./app/.env

  mongo:
    image: mongo:6
    volumes:
      - mongo_data:/data/db
    env_file:
      - ./app/.env

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celery:
    build: ./app
    command: celery -A app worker --loglevel=info
    env_file:
      - ./app/.env
    depends_on:
      - redis
      - mongo
      - postgres

  celery-beat:
    build: ./app
    command: celery -A app beat --loglevel=info
    env_file:
      - ./app/.env
    depends_on:
      - redis

  grafana:
    image: grafana/grafana-enterprise
    environment:
      GF_SERVER_ROOT_URL: "http://localhost/grafana"
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - postgres

volumes:
  static_volume:
  postgres_data:
  mongo_data:
  redis_data:
  grafana_data: